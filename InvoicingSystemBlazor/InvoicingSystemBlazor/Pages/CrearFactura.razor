@page "/CrearFactura/{RFC}"
@using InvoicingSystemBlazor.Models.Entities
@using InvoicingSystemBlazor.Models.Enums
@using InvoicingSystemBlazor.Models.ViewModels.Facturas
@using InvoicingSystemBlazor.Controllers.Api.Services.Interfaces
@inject IHttpContextAccessor httpContextaccessor
@inject IClienteService ClienteService;
@inject IFacturaService FacturaService;
@inject IContribuyenteService ContribuyenteService;
@inject NavigationManager NavManager;


<PageTitle>Nueva Factura</PageTitle>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <h1 class="text-center mb-4">Nueva Factura</h1>

            <!-- Contribuyente Section -->
            <div class="mb-4">
                <label for="contribuyente" class="form-label">Contribuyente:</label>
                <p>@_facturaViewModel.Contribuyente.RFC</p>
                <input type="hidden" @bind="_facturaViewModel.Contribuyente.RFC" id="contribuyente">
            </div>

            <!-- Cliente Section -->
            <div class="mb-4">
                <label for="cliente" class="form-label">Cliente:</label>
                <select class="form-select" @bind="_facturaViewModel.Cliente.RFC" id="cliente">
                    <option value="">Selecciona un cliente</option>
                    @foreach (Cliente cliente in _facturaViewModel.Clientes)
                    {
                        <option value="@cliente.RFC">@cliente.RFC</option>
                    }
                </select>
            </div>
        </div>
    </div>
</div>




<div class="container mt-5">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <!-- Tipo de factura -->
            <div class="mb-3">
                <label for="tipoFactura" class="form-label">Tipo de factura:</label>
                <input type="text" class="form-control" id="tipoFactura" @bind="_facturaViewModel.TipoDeFactura">
            </div>

            <!-- Uso de factura -->
            <div class="mb-3">
                <label for="usoFactura" class="form-label">Uso de factura:</label>
                <input type="text" class="form-control" id="usoFactura" @bind="_facturaViewModel.UsoDeFactura">
            </div>

            <!-- Moneda -->
            <div class="mb-3">
                <label for="moneda" class="form-label">Moneda:</label>
                <select class="form-select" id="moneda" @bind="_facturaViewModel.Moneda">
                    <option selected>Selecciona una moneda</option>
                    @foreach (Moneda moneda in Enum.GetValues(typeof(Moneda)))
                    {
                        <option value="@moneda">@moneda</option>
                    }
                </select>
            </div>

            <!-- Forma de Pago -->
            <div class="mb-3">
                <label for="formaPago" class="form-label">Forma de Pago:</label>
                <select class="form-select" id="formaPago" @bind="_facturaViewModel.FormaDePago">
                    <option selected>Selecciona una forma de pago</option>
                    @foreach (FormaDePago formaDePago in Enum.GetValues(typeof(FormaDePago)))
                    {
                        <option value="@formaDePago">@formaDePago</option>
                    }
                </select>
            </div>

            <!-- Metodo de Pago -->
            <div class="mb-3">
                <label for="metodoPago" class="form-label">Metodo de Pago:</label>
                <select class="form-select" id="metodoPago" @bind="_facturaViewModel.MetodoDePago">
                    <option selected>Selecciona un metodo de pago</option>
                    @foreach (MetodoDePago metodoDePago in Enum.GetValues(typeof(MetodoDePago)))
                    {
                        <option value="@metodoDePago">@metodoDePago</option>
                    }
                </select>
            </div>

            <!-- Serie -->
            <div class="mb-3">
                <label for="serie" class="form-label">Serie:</label>
                <input type="text" class="form-control" id="serie" @bind="_facturaViewModel.Serie">
            </div>

            <!-- Folio -->
            <div class="mb-3">
                <label for="folio" class="form-label">Folio:</label>
                <input type="text" class="form-control" id="folio" @bind="_facturaViewModel.Folio">
            </div>

            <!-- Condiciones de Pago -->
            <div class="mb-3">
                <label for="condicionesPago" class="form-label">Condiciones de Pago:</label>
                <input type="text" class="form-control" id="condicionesPago" @bind="_facturaViewModel.CondicionesDePago">
            </div>
        </div>
    </div>
</div>


<!-- Nuevo concepto -->
<div class="m-2 p-2">
    @if (_statusConcepto)
    {
        <div class="container mt-5">
            <div class="row">
                <h2 class="mb-4">Concepto</h2>
                <div class="col-md-6 offset-md-3">
                    <!-- Clave de Producto o Servicio -->
                    <div class="mb-3">
                        <label for="claveProducto" class="form-label">Clave de Producto o Servicio:</label>
                        <input type="text" class="form-control" id="claveProducto" @bind="conceptoViewModel.ClaveDeProductoOServicio">
                    </div>

                    <!-- Clave de Unidad -->
                    <div class="mb-3">
                        <label for="claveUnidad" class="form-label">Clave de Unidad:</label>
                        <input type="text" class="form-control" id="claveUnidad" @bind="conceptoViewModel.ClaveDeUnidad">
                    </div>

                    <!-- Cantidad -->
                    <div class="mb-3">
                        <label for="cantidad" class="form-label">Cantidad:</label>
                        <input type="text" class="form-control" id="cantidad" @bind="conceptoViewModel.Cantidad">
                    </div>

                    <!-- Unidad -->
                    <div class="mb-3">
                        <label for="unidad" class="form-label">Unidad:</label>
                        <input type="text" class="form-control" id="unidad" @bind="conceptoViewModel.Unidad">
                    </div>

                    <!-- Numero de Identificacion -->
                    <div class="mb-3">
                        <label for="numeroIdentificacion" class="form-label">Numero de Identificacion:</label>
                        <input type="text" class="form-control" id="numeroIdentificacion" @bind="conceptoViewModel.NumeroDeIdentificacion">
                    </div>

                    <!-- Descripcion -->
                    <div class="mb-3">
                        <label for="descripcion" class="form-label">Descripcion:</label>
                        <input type="text" class="form-control" id="descripcion" @bind="conceptoViewModel.Descripcion">
                    </div>

                    <!-- Valor Unitario -->
                    <div class="mb-3">
                        <label for="valorUnitario" class="form-label">Valor Unitario:</label>
                        <input type="text" class="form-control" id="valorUnitario" @bind="conceptoViewModel.ValorUnitario">
                    </div>

                    <!-- Agregar IVA Button -->
                    <button class="btn btn-outline-success" onclick="@AddIVA">Agregar IVA</button>
                </div>
            </div>
        </div>

        @if (conceptoViewModel.TieneIVA)
        {
            <div class="container mt-4">
                <div class="row">
                    <div class="col-md-6 offset-md-3">
                        <!-- Tasa IVA Label -->
                        <div class="mb-3">
                            <label for="tasaIVA" class="form-label">Tasa IVA:</label>
                            <input type="text" class="form-control" id="tasaIVA" @bind="conceptoViewModel.TasaIVA">
                        </div>

                        <!-- Cancelar Button -->
                        <button class="btn btn-outline-danger" onclick="@RemoveIVA">Cancelar</button>
                    </div>
                </div>
            </div>
        }
        <div class="container mt-4">
            <div class="row">
                <div class="col-md-6 offset-md-3">
                    <div class="card p-4">
                        <!-- ... (previous code) -->
                        <!-- Centered "Nuevo Concepto" button -->
                        <div class="text-center">
                            <button class="btn btn-outline-success" onclick="@AddNuevoConcepto">Agregar</button>
                            <button class="btn btn-outline-danger" onclick="@CancelarNuevoConcepto">Cancelar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
    }
    else
    {

        <div class="container mt-4">
            <div class="row">
                <div class="col-md-6 offset-md-3">
                    <div class="card p-4">
                        <!-- ... (previous code) -->
                        <!-- Centered "Nuevo Concepto" button -->
                        <div class="text-center">
                            <button class="btn btn-outline-success" onclick="@NuevoConcepto">Nuevo Concepto</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        
    }
    
</div>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            @foreach (ConceptoViewModel concepto in _listaConceptos)
            {
                <div class="card mb-3">
                    <div class="card-body">
                        <h5 class="card-title">@concepto.NumeroDeIdentificacion</h5>
                        <p class="card-text">@concepto.Descripcion</p>
                        <p class="card-text">Cantidad: @concepto.Cantidad</p>
                        <p class="card-text">Valor Unitario: @concepto.ValorUnitario</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>



<div class="container mt-4">
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <div class="card p-4">
                <!-- Subtotal Factura -->
                <div class="mb-3">
                    <p class="mb-0">Subtotal Factura: @_facturaViewModel.SubtotalFactura</p>
                </div>

                <!-- Descuento Factura -->
                <div class="mb-3">
                    <p class="mb-0">Descuento Factura: @_facturaViewModel.DescuentoFactura</p>
                </div>

                <!-- Total IVA -->
                <div class="mb-3">
                    <p class="mb-0">Total IVA: @_facturaViewModel.TotalIVA</p>
                </div>

                <!-- Total Factura -->
                <div class="mb-3">
                    <p class="mb-0">Total Factura: @_facturaViewModel.TotalFactura</p>
                </div>

                <!-- Crear factura Button -->
                <button class="btn btn-outline-success" onclick="@PostFactura">Crear factura</button>
            </div>
        </div>
    </div>
</div>








@code {
    [Parameter]
    public string RFC { get; set; }
    private CrearFacturaViewModel _facturaViewModel = new CrearFacturaViewModel();
    private List<ConceptoViewModel> _listaConceptos = new List<ConceptoViewModel>();
    private ConceptoViewModel conceptoViewModel = new ConceptoViewModel();
    private bool _statusConcepto = false;

    /*
    private string GetRFCFromCookies()
    {
    string RFC = "";
    foreach (var cookie in httpContextaccessor.HttpContext.Request.Cookies)
        {
            if (cookie.Key.Equals("RFC"))
            {
        RFC = cookie.Value;
    break;
    }
    }
    return RFC;
    }
    */
    private async Task<Contribuyente> getContribuyente(string RFC)
    {
        Contribuyente myContribuyente = await ContribuyenteService.GetContribuyente(RFC);
        return myContribuyente;
    }

    private async Task<List<Cliente>> getClientes()
    {
        List<Cliente> myClientes = await ClienteService.GetClientes();
        return myClientes;
    }

    protected override async Task OnInitializedAsync()
    {
        //string RFC = GetRFCFromCookies();
        _facturaViewModel.Contribuyente = await getContribuyente(RFC);
        _facturaViewModel.Clientes = await getClientes();

    }
    private void NuevoConcepto()
    {
        _statusConcepto = true;
    }

    private void CancelarNuevoConcepto()
    {
        _statusConcepto = false;
        conceptoViewModel = new ConceptoViewModel();
    }

    private void AddNuevoConcepto()
    {
        if (conceptoViewModel.TieneIVA)
        {
            conceptoViewModel.SubtotalConcepto=(conceptoViewModel.Cantidad) * (conceptoViewModel.ValorUnitario);
            conceptoViewModel.TotalIVA= (conceptoViewModel.SubtotalConcepto * conceptoViewModel.TasaIVA) / 100;
            conceptoViewModel.TotalConcepto=conceptoViewModel.SubtotalConcepto+conceptoViewModel.TotalIVA;
        }
        else
        {
            conceptoViewModel.TotalConcepto=conceptoViewModel.SubtotalConcepto=(conceptoViewModel.Cantidad) * (conceptoViewModel.ValorUnitario);
        }
        _listaConceptos.Add(conceptoViewModel);
        Console.WriteLine("Lista de conceptos desde addnuevoconcepto: "+_listaConceptos.Count());
        conceptoViewModel = new ConceptoViewModel();
        CalcularTotal();
        _statusConcepto = false;
    }

    private void AddIVA()
    {
        conceptoViewModel.TieneIVA = true;
    }
    private void RemoveIVA()
    {
        conceptoViewModel.TieneIVA = false;
    }

    private void CalcularTotal()
    {
        ConceptoViewModel concepto =_listaConceptos[_listaConceptos.Count()-1];
        if (concepto.TieneIVA)
        {
            _facturaViewModel.SubtotalFactura=_facturaViewModel.SubtotalFactura+concepto.SubtotalConcepto;
            _facturaViewModel.TotalIVA=_facturaViewModel.TotalIVA+concepto.TotalIVA;
            _facturaViewModel.TotalFactura=_facturaViewModel.TotalFactura+concepto.TotalConcepto;
        }
        else
        {
            _facturaViewModel.SubtotalFactura+=concepto.SubtotalConcepto; 
            _facturaViewModel.TotalFactura+=concepto.TotalConcepto;
        }
    }

    private async void PostFactura()
    {
        _facturaViewModel.ConceptosViewModel=_listaConceptos;
        Console.WriteLine("Imprimiendo los conceptos");
        Console.WriteLine("Numero de conceptos: "+_facturaViewModel.ConceptosViewModel.Count());
        for (int i=0;i< _facturaViewModel.ConceptosViewModel.Count(); i++)
        {
            Console.WriteLine(_facturaViewModel.ConceptosViewModel[i].Descripcion);
        }
        Console.WriteLine("Dentro de post");
        Console.WriteLine(_facturaViewModel.ToString());
        var post = await FacturaService.PostFactura(_facturaViewModel);
        NavManager.NavigateTo("/FacturaFinalizada/"+post.Id);
    }
}